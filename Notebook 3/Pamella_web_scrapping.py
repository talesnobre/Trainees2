# -*- coding: utf-8 -*-
"""Web_Scrapping.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1L2xCULB0nre_973Vkz1ny-tO4QEYRUYJ
"""

# Commented out IPython magic to ensure Python compatibility.
# Imports
import requests
import numpy as np
import pandas as pd
import bs4
from bs4 import BeautifulSoup
import matplotlib.pyplot as plt

# %matplotlib inline

# Mercado Livre's homepage
mercado_free_url = 'https://lista.mercadolivre.com.br/mi-band-5#D[A:mi%20band%205]'

# Fazer a requisição para acessar o HTML
mercado_free_response = requests.get(mercado_free_url)

# Pegar o conteúdo da página
#content = mercado_free_response.content

print('Status code:', mercado_free_response.status_code)

# Pegar o Conteúdo com o Beautiful que mostra um HTML mais estruturado
mercado_free_soup = BeautifulSoup(mercado_free_response.text, 'html.parser')

# Title of the parsed page
mercado_free_soup.title

# We can also get it without the HTML tags
mercado_free_soup.title.string

lista_anuncios = []

anuncios = mercado_free_soup.findAll('div', {'class': 'ui-search-result__wrapper'})

print(anuncios)

print(type(anuncios))

if isinstance(anuncios, bs4.ResultSet):
    print(anuncios[0].prettify())

for anuncio in anuncios:
    titulo = anuncio.find('h2', attrs={'class': 'ui-search-item__title'})
    imagem = anuncio.find('div', attrs={'class': 'ui-search-result__image'})
    link = anuncio.find('a', attrs={'class': 'ui-search-item__group__element ui-search-link__title-card ui-search-link'})

    lista_anuncios.append([titulo.text, imagem.text, link['href']])

    print('Título do produto:', titulo.text)
    print('Link do produto:', link['href'])
    print('Imagem do produto:', imagem.text)
    print()

anuncios_df = pd.DataFrame(lista_anuncios, columns=['Título  do produto', 'Imagem do produto', 'Link do produto'])

anuncios_df.to_excel('anuncio_mf.xlsx', index=True)

anuncios_df

for widget in mercado_free_soup.find_all('aside', {'class': 'ui-search-sidebar'}):
    # Verifica se o widget possui um cabeçalho
    if widget.h3:
        print(widget.h3.string)
        for title in widget.find_all('div', {'class': 'title'}):
            print(title.text)
        print()
    else:
        print('não')

# Find all links
links = [link.get('href') for link in mercado_free_soup.find_all('a')]

# Add homepage and keep the unique links
fixed_links = set([''.join([mercado_free_url, link]) for link in links if link])

print(links)